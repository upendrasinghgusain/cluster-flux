apiVersion: apps/v1
kind: Deployment
metadata:
  name: aspnet-api-deployment
  labels:
    app: aspnet-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aspnet-api
  template:
    metadata:
      labels:
        app: aspnet-api
    spec:
      containers:
      - name: aspnet-api
        image: upendragusain/clusterflux-api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: ASPNETCORE_URLS
          value: http://+:8080
        resources:
          requests:
            cpu: "10m"              # âš¡ Lower request makes HPA scale more pods
            memory: "56Mi"
          limits:
            cpu: "10m"              # âš¡ Keep limits tight to saturate CPU faster
            memory: "56Mi"
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
        - key: CriticalAddonsOnly
          operator: Exists
---
apiVersion: v1
kind: Service
metadata:
  name: aspnet-api-service
spec:
  selector:
    app: aspnet-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: aspnet-api-ingress
  annotations:
    kubernetes.io/ingress.class: "traefik"
spec:
  rules:
  - host: clusterflux.co.uk
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: aspnet-api-service
            port:
              number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: aspnet-api-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: aspnet-api-deployment
  minReplicas: 1
  maxReplicas: 30                # ðŸš€ Allow scale to 30
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
        - type: Pods             # ðŸ”¥ More aggressive scaling per cycle
          value: 10
          periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 30
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50   # ðŸ’¡ Lower value => scale sooner
